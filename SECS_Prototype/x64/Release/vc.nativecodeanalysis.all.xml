<?xml version="1.0" encoding="utf-8"?><DEFECTS><DEFECT>
    <SFA>
      <FILEPATH>D:\Coding\SECS_Prototype\SECS_Prototype\Types\</FILEPATH>
      <FILENAME>SComponent.hpp</FILENAME>
      <LINE>43</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'SECS::ComponentC::c' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>SECS::ComponentC::{ctor}</FUNCTION>
    <DECORATED>??0ComponentC@SECS@@QEAA@XZ</DECORATED>
    <FUNCLINE>43</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>SECS::ComponentC::c</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\Coding\SECS_Prototype\SECS_Prototype\Types\</FILEPATH>
      <FILENAME>SComponent.hpp</FILENAME>
      <LINE>56</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'SECS::ComponentD::c' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>SECS::ComponentD::{ctor}</FUNCTION>
    <DECORATED>??0ComponentD@SECS@@QEAA@XZ</DECORATED>
    <FUNCLINE>56</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>SECS::ComponentD::c</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\Coding\SECS_Prototype\SECS_Prototype\Types\</FILEPATH>
      <FILENAME>SArcheType.hpp</FILENAME>
      <LINE>126</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'SECS::SArcheType::SizeOfs' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>SECS::SArcheType::{ctor}</FUNCTION>
    <DECORATED>??0SArcheType@SECS@@IEAA@XZ</DECORATED>
    <FUNCLINE>126</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>SECS::SArcheType::SizeOfs</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\Coding\SECS_Prototype\SECS_Prototype\</FILEPATH>
      <FILENAME>SECS_Prototype.cpp</FILENAME>
      <LINE>31</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>28159</DEFECTCODE>
    <DESCRIPTION>考虑使用“GetTickCount64”而不是“GetTickCount”。原因: GetTickCount overflows roughly every 49 days.  Code that does not take that into account can loop indefinitely.  GetTickCount64 operates on 64 bit values and does not have that problem</DESCRIPTION>
    <FUNCTION>main</FUNCTION>
    <DECORATED>main</DECORATED>
    <FUNCLINE>15</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\Coding\SECS_Prototype\SECS_Prototype\</FILEPATH>
      <FILENAME>SECS_Prototype.cpp</FILENAME>
      <LINE>44</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>28159</DEFECTCODE>
    <DESCRIPTION>考虑使用“GetTickCount64”而不是“GetTickCount”。原因: GetTickCount overflows roughly every 49 days.  Code that does not take that into account can loop indefinitely.  GetTickCount64 operates on 64 bit values and does not have that problem</DESCRIPTION>
    <FUNCTION>main</FUNCTION>
    <DECORATED>main</DECORATED>
    <FUNCLINE>15</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\Coding\SECS_Prototype\SECS_Prototype\</FILEPATH>
      <FILENAME>SECS_Prototype.cpp</FILENAME>
      <LINE>47</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>28159</DEFECTCODE>
    <DESCRIPTION>考虑使用“GetTickCount64”而不是“GetTickCount”。原因: GetTickCount overflows roughly every 49 days.  Code that does not take that into account can loop indefinitely.  GetTickCount64 operates on 64 bit values and does not have that problem</DESCRIPTION>
    <FUNCTION>main</FUNCTION>
    <DECORATED>main</DECORATED>
    <FUNCLINE>15</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\Coding\SECS_Prototype\SECS_Prototype\</FILEPATH>
      <FILENAME>SECS_Prototype.cpp</FILENAME>
      <LINE>57</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>28159</DEFECTCODE>
    <DESCRIPTION>考虑使用“GetTickCount64”而不是“GetTickCount”。原因: GetTickCount overflows roughly every 49 days.  Code that does not take that into account can loop indefinitely.  GetTickCount64 operates on 64 bit values and does not have that problem</DESCRIPTION>
    <FUNCTION>main</FUNCTION>
    <DECORATED>main</DECORATED>
    <FUNCLINE>15</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\Coding\SECS_Prototype\SECS_Prototype\</FILEPATH>
      <FILENAME>SECS_Prototype.cpp</FILENAME>
      <LINE>51</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26444</DEFECTCODE>
    <DESCRIPTION>Avoid unnamed objects with custom construction and destruction (es.84).</DESCRIPTION>
    <FUNCTION>main</FUNCTION>
    <DECORATED>main</DECORATED>
    <FUNCLINE>15</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\Coding\SECS_Prototype\SECS_Prototype\</FILEPATH>
      <FILENAME>SECS_Prototype.cpp</FILENAME>
      <LINE>53</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26444</DEFECTCODE>
    <DESCRIPTION>Avoid unnamed objects with custom construction and destruction (es.84).</DESCRIPTION>
    <FUNCTION>main</FUNCTION>
    <DECORATED>main</DECORATED>
    <FUNCLINE>15</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\Coding\SECS_Prototype\SECS_Prototype\</FILEPATH>
      <FILENAME>SECS_Prototype.cpp</FILENAME>
      <LINE>50</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26444</DEFECTCODE>
    <DESCRIPTION>Avoid unnamed objects with custom construction and destruction (es.84).</DESCRIPTION>
    <FUNCTION>main</FUNCTION>
    <DECORATED>main</DECORATED>
    <FUNCLINE>15</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\Coding\SECS_Prototype\SECS_Prototype\</FILEPATH>
      <FILENAME>SECS_Prototype.cpp</FILENAME>
      <LINE>52</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26444</DEFECTCODE>
    <DESCRIPTION>Avoid unnamed objects with custom construction and destruction (es.84).</DESCRIPTION>
    <FUNCTION>main</FUNCTION>
    <DECORATED>main</DECORATED>
    <FUNCLINE>15</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\Coding\SECS_Prototype\SECS_Prototype\Managers\</FILEPATH>
      <FILENAME>SEntityManager.hpp</FILENAME>
      <LINE>22</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'SECS::SEntityManager::SEntityData::Chunk' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>SECS::SEntityManager::SEntityData::{ctor}</FUNCTION>
    <DECORATED>??0SEntityData@SEntityManager@SECS@@QEAA@XZ</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>SECS::SEntityManager::SEntityData::Chunk</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT></DEFECTS>