  SECS_Prototype.cpp
D:\Coding\SECS_Prototype\SECS_Prototype\Types\SArcheType.hpp(50,25): warning C4018:  “<”: 有符号/无符号不匹配
D:\Coding\SECS_Prototype\SECS_Prototype\Types\SChunk.hpp(114,25): warning C4018:  “<”: 有符号/无符号不匹配
D:\Coding\SECS_Prototype\SECS_Prototype\Types\SChunk.hpp(138,25): warning C4018:  “<”: 有符号/无符号不匹配
D:\Coding\SECS_Prototype\SECS_Prototype\SECS_Prototype.cpp(19,15): warning C4244:  “初始化”: 从“ULONGLONG”转换到“double”，可能丢失数据
D:\Coding\SECS_Prototype\SECS_Prototype\SECS_Prototype.cpp(32,15): warning C4244:  “初始化”: 从“ULONGLONG”转换到“double”，可能丢失数据
D:\Coding\SECS_Prototype\SECS_Prototype\SECS_Prototype.cpp(36,14): warning C4244:  “初始化”: 从“ULONGLONG”转换到“double”，可能丢失数据
D:\Coding\SECS_Prototype\SECS_Prototype\SECS_Prototype.cpp(45,15): warning C4244:  “初始化”: 从“ULONGLONG”转换到“double”，可能丢失数据
D:\Coding\SECS_Prototype\SECS_Prototype\SECS_Prototype.cpp(72,14): warning C4244:  “初始化”: 从“ULONGLONG”转换到“double”，可能丢失数据
D:\Coding\SECS_Prototype\SECS_Prototype\SECS_Prototype.cpp(79,15): warning C4244:  “初始化”: 从“ULONGLONG”转换到“double”，可能丢失数据
D:\Coding\SECS_Prototype\SECS_Prototype\Managers\SEntityManager.hpp(106,24): warning C4018:  “<”: 有符号/无符号不匹配
D:\Coding\SECS_Prototype\SECS_Prototype\Types\SWorld.hpp(33): message :  查看对正在编译的函数 模板 实例化“void SECS::SEntityManager::Each<SECS::ComponentA,SECS::ComponentB>(std::function<void (SECS::SEntity,SECS::ComponentA *,SECS::ComponentB *)>,SECS::SArcheTypeManager *)”的引用
D:\Coding\SECS_Prototype\SECS_Prototype\SECS_Prototype.cpp(70): message :  查看对正在编译的函数 模板 实例化“void SECS::SWorld::Each<SECS::ComponentA,SECS::ComponentB>(std::function<void (SECS::SEntity,SECS::ComponentA *,SECS::ComponentB *)>)”的引用
D:\Coding\SECS_Prototype\SECS_Prototype\Managers\SArcheTypeManager.hpp(48,23): warning C4018:  “<”: 有符号/无符号不匹配
D:\Coding\SECS_Prototype\SECS_Prototype\Managers\SEntityManager.hpp(101): message :  查看对正在编译的函数 模板 实例化“SECS::SArcheTypeList SECS::SArcheTypeManager::CompFilterGetArcheTypes<SECS::ComponentA,SECS::ComponentB>(void)”的引用
D:\Coding\SECS_Prototype\SECS_Prototype\Types\SWorld.hpp(33): message :  查看对正在编译的函数 模板 实例化“void SECS::SEntityManager::Each<SECS::ComponentA,SECS::ComponentB>(std::function<void (SECS::SEntity,SECS::ComponentA *,SECS::ComponentB *)>,SECS::SArcheTypeManager *)”的引用
D:\Coding\SECS_Prototype\SECS_Prototype\Types\SArcheType.hpp(36,25): warning C4018:  “<”: 有符号/无符号不匹配
D:\Coding\SECS_Prototype\SECS_Prototype\Types\SChunk.hpp(105): message :  查看对正在编译的函数 模板 实例化“int SECS::SArcheType::GetComponentIndex<T>(void)”的引用
D:\Coding\SECS_Prototype\SECS_Prototype\Types\SChunk.hpp(105): message :         with
D:\Coding\SECS_Prototype\SECS_Prototype\Types\SChunk.hpp(105): message :         [
D:\Coding\SECS_Prototype\SECS_Prototype\Types\SChunk.hpp(105): message :             T=SECS::ComponentA
D:\Coding\SECS_Prototype\SECS_Prototype\Types\SChunk.hpp(105): message :         ]
D:\Coding\SECS_Prototype\SECS_Prototype\Managers\SEntityManager.hpp(111): message :  查看对正在编译的函数 模板 实例化“T *SECS::SChunk::__getCompPtr<SECS::ComponentA>(size_t)”的引用
D:\Coding\SECS_Prototype\SECS_Prototype\Managers\SEntityManager.hpp(111): message :         with
D:\Coding\SECS_Prototype\SECS_Prototype\Managers\SEntityManager.hpp(111): message :         [
D:\Coding\SECS_Prototype\SECS_Prototype\Managers\SEntityManager.hpp(111): message :             T=SECS::ComponentA
D:\Coding\SECS_Prototype\SECS_Prototype\Managers\SEntityManager.hpp(111): message :         ]
  正在生成代码
  33 of 651 functions ( 5.1%) were compiled, the rest were copied from previous compilation.
    29 functions were new in current compilation
    0 functions had inline decision re-evaluated but remain unchanged
  已完成代码的生成
  SECS_Prototype.vcxproj -> D:\Coding\SECS_Prototype\Release\SECS_Prototype.exe
